# set directory
general_dir <- "/media/aitor/WDE/PhD_UVa/1_Topics/7_Carbon_mix_stands/6_GITHUB/SIMANFOR_mixed_models_implementation/2_simanfor/"
# set directory
general_dir <- "SIMANFOR_mixed_models_implementation/2_simanfor/"
setwd(general_dir)
# set directory
general_dir <- "/media/aitor/WDE/PhD_UVa/1_Topics/7_Carbon_mix_stands/6_GITHUB/SIMANFOR_mixed_models_implementation/2_simanfor/"
setwd(general_dir)
# libraries
library(readxl)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
plots <- tibble()  # will contain plot data
directory <- list.dirs(path = ".")  # will contain folder names
# for each subfolder...
for (folder in directory){
# each subfolder is stablished as main one
specific_dir <- paste(general_dir, "substract", folder, sep = "")
specific_dir <- gsub("substract.", "", specific_dir)
setwd(specific_dir)
# extract .xlsx files names
files_list <- list.files(specific_dir, pattern="xlsx")
# for each file...
for (doc in files_list){
# read plot data
plot_data <- read_excel(doc, sheet = "Plots")
# create a new column with its name
plot_data$File_name <- doc
# add information to plot df
ifelse(length(plots) == 0, plots <- rbind(plot_data), plots <- bind_rows(plots, plot_data))
}
}
# make a copy of the data
df <- plots
#-#-#-# clean the plots to use, removing outliers
source('../3_code/1.1_manual_clean_plots.r')
#-#-#-# clean the plots to use, removing outliers
source('../../../3_code/1.1_manual_clean_plots.r')
#-#-#-# clean the plots to use, removing outliers
source('../../../3_code/1.1_clean_plots_manually.r')
plot_list <- manual_cleaning_IFN4_mixtures(df)
df <- df[df$Plot_ID %in% plot_list, ]
# function to round on ages on 5 years step
redondeo <- function(x, base){
base * round(x/base)
}
# remove initial load
df <- df[!df$Action == "Initial load", ]
# fill NAs with 0 values
df[is.na(df)] <- 0
# group biomass values on 3 groups: stem (WSW), branches (WB) and roots (WR)
df$WB <- df$WTHICKB + df$WB2_7 + df$WTBL + df$WTHINB
df$WB_sp1 <- df$WTHICKB_sp1 + df$WB2_7_sp1 + df$WTBL_sp1 + df$WTHINB_sp1
df$WB_sp2 <- df$WTHICKB_sp2 + df$WB2_7_sp2 + df$WTBL_sp2 + df$WTHINB_sp2
# calculate carbon content by species
# first, carbon proportions related to total w
qpyr_carbon = 0.1841*0.4578 + 0.5427*0.4558 + 0.2732*0.4582  # bark, sapwood and heartwood proportions
# make a copy of the data
df <- plots
#-#-#-# clean the plots to use, removing outliers
source('../../../3_code/1.1_clean_plots_manually.r')
plot_list <- manual_cleaning_IFN4_mixtures(df)
df <- df[df$Plot_ID %in% plot_list, ]
# function to round on ages on 5 years step
redondeo <- function(x, base){
base * round(x/base)
}
# remove initial load
df <- df[!df$Action == "Initial load", ]
# fill NAs with 0 values
df[is.na(df)] <- 0
# group biomass values on 3 groups: stem (WSW), branches (WB) and roots (WR)
df$WB <- df$WTHICKB + df$WB2_7 + df$WTBL + df$WTHINB
df$WB_sp1 <- df$WTHICKB_sp1 + df$WB2_7_sp1 + df$WTBL_sp1 + df$WTHINB_sp1
df$WB_sp2 <- df$WTHICKB_sp2 + df$WB2_7_sp2 + df$WTBL_sp2 + df$WTHINB_sp2
# calculate carbon content by species
# first, carbon proportions related to total w
qpyr_carbon = 0.1841*0.4578 + 0.5427*0.4558 + 0.2732*0.4582  # bark, sapwood and heartwood proportions
ppin_carbon = 46.8/100
pnig_carbon = 46.4/100
psyl_carbon = 45.9/100
fsyl_carbon = 46.7/100
# second, carbon calculation by species
df$CARBON_sp1 <- df$CARBON_sp2 <- df$CARBON <- 0
df$CARBON_s_sp1 <- df$CARBON_s_sp2 <- df$CARBON_s <- 0
df$CARBON_b_sp1 <- df$CARBON_b_sp2 <- df$CARBON_b <- 0
setwd('/media/aitor/WDE/PhD_UVa/1_Topics/7_Carbon_mix_stands/6_GITHUB/SIMANFOR_mixed_models_implementation/')
library(ggplot2)
library(viridis)
library(dplyr)
library(stringr)
# load information
#load('1.0_data/3_final/simulation_results.RData')
load('1.0_data/3_final/simulation_results.RData')
# load information
#load('1.0_data/3_final/simulation_results.RData')
load('1.0_data/simulation_results.RData')
# load information
#load('1.0_data/3_final/simulation_results.RData')
load('1_data/simulation_results.RData')
# load information
#load('1.0_data/3_final/simulation_results.RData')
load('1_data/simulation_results.RData')
# rename to simplify
df <- stand_evolution
# delete growth extra period on control simulations
df <- df[df$T <= 120, ]
# delete jumps in data in Pnigra and Ppinaster mixtures
df <- df[!(df$n_scnr == 'PsylPnig_c24' & df$T == 85), ]
df <- df[!(df$n_scnr == 'PsylPpin_c24' & df$T == 90), ]
# column for mixture
df$Mixture <- ifelse(str_detect(df$n_scnr, 'Fsyl'), 'Psylvestris x Fsylvatica',
ifelse(str_detect(df$n_scnr, 'Qpyr'), 'Psylvestris x Qpyrenaica',
ifelse(str_detect(df$n_scnr, 'Ppin'), 'Psylvestris x Ppinaster',
'Psylvestris x Pnigra')))
# rename scenario labels
df$n_scnr <- ifelse(str_detect(df$n_scnr, 'c12'), 'SI 12',
ifelse(str_detect(df$n_scnr, 'c15'), 'SI 15',
ifelse(str_detect(df$n_scnr, 'c18'), 'SI 18',
ifelse(str_detect(df$n_scnr, 'c21'), 'SI 21',
ifelse(str_detect(df$n_scnr, 'c24'), 'SI 24', 'Control')))))
graph <-
ggplot(df, aes(x = T, y = N,
group = n_scnr, colour = n_scnr)) +  # group by scnr
# text
labs(title = "Stand density evolution",
# subtitle = "",
x = "Stand age (years)",
y = "Density (trees/ha)"
) +
# text position and size
theme(plot.title = element_text(size = 20, hjust = 0.5), # title
# plot.subtitle = element_text(size = 15, hjust = 0.5),
axis.title = element_text(size = 15),  # axis
legend.title = element_text(size = 15),  # legend title
legend.text = element_text(size = 12)) +  # legend content
# set colors and legend name manually
scale_color_viridis('Scenario', discrete = TRUE, option = "D")+
scale_fill_viridis(discrete = TRUE) +
# plot data
geom_point() +  # points
geom_line() +  # lines
# one graph per mixture
facet_wrap(~ Mixture, scale = 'free')
# watch and save graph
graph
graph <-
ggplot(df, aes(x = T, y = WT_all,
group = n_scnr, colour = n_scnr)) +  # group by scnr
# text
labs(title = "Stand total biomass and carbon",
subtitle = "Solid line represents total biomass and dashed line represents sequestered carbon",  # subtÃ­tulo
x = "Stand age (years)",
y = "Biomass / Carbon (tn/ha)"
) +
# theme
theme_minimal() +
# text position and size
theme(plot.title = element_text(size = 20, hjust = 0.5), # title
plot.subtitle = element_text(size = 12, hjust = 0.5),  # subtitle
axis.title = element_text(size = 15),  # axis
strip.text = element_text(size = 15),  # facet text
legend.position = 'bottom',  # legend position
legend.title = element_text(size = 12),  # legend title
legend.text = element_text(size = 12)) +  # legend content
# set colors and legend name manually
# scale_color_viridis('Scenario', discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE) +
scale_color_brewer('Scenarios', palette = "Dark2") +
# plot data
geom_point() +  # points
geom_line() +  # lines
# plot carbon data
geom_point(aes(y = CARBON_all), shape = 1) +  # points
geom_line(aes(y = CARBON_all), linetype = "dashed") +  # lines
# one graph per mixture
facet_wrap(~ Mixture, scale = 'free')
# watch and save graph
graph
